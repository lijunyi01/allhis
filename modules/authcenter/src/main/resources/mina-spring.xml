<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.net.SocketAddress" value="org.apache.mina.integration.spring.InetSocketAddressEditor" >
                </entry>
            </map>
        </property>
    </bean>

    <!--可以在多个端口侦听-->
    <bean id="ioAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"
          init-method="bind" destroy-method="unbind">
        <property name="defaultLocalAddress" value=":${system.port}" />
        <property name="handler" ref="TcpHandler" />
        <property name="filterChainBuilder" ref="filterChainBuilder" />
        <property name="reuseAddress" value="true" />
    </bean>

    <bean id="ioAcceptorSSL" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"
          init-method="bind" destroy-method="unbind">
        <property name="defaultLocalAddress" value=":${system.sslport}" />
        <property name="handler" ref="TcpHandler" />
        <property name="filterChainBuilder" ref="filterChainBuilderSSL" />
        <property name="reuseAddress" value="true" />
    </bean>

    <!--相对应于多个侦听端口，也有多个handler。还可以共用一个handler-->
    <!--<com.allcom.bean id="SampleHandler" class="allcom.handler.HandlerTwo" />-->
    <bean id="TcpHandler" class="com.allhis.handler.TcpHandler" />
    <!--<com.allcom.bean id="TcpHandlerSSL" class="allcom.handler.TcpHandlerSSL" />-->
    <!--boss server  -->
    <!--<com.allcom.bean id="bossSampleHandler" class="cn.org.handler.HandlerOne" />-->

    <bean id="filterChainBuilder" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
        <property name="filters">
            <map>
                <entry key="executor" value-ref="executorFilter" />
                <entry key="mdcInjectionFilter"
                       value-ref="mdcInjectionFilter" />
                <entry key="codecFilter" value-ref="codecFilter" />
                <!--可以关闭MINA的日志-->
                <!--<entry key="loggingFilter" value-ref="loggingFilter" />-->
            </map>
        </property>
    </bean>

    <bean id="filterChainBuilderSSL" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
        <property name="filters">
            <map>
                <!--com.allcom.bean sslFilter在ApplicationConfig.java里定义-->
                <entry key="sslFilter" value-ref="sslFilter"/>
                <entry key="executor" value-ref="executorFilter" />
                <entry key="mdcInjectionFilter" value-ref="mdcInjectionFilter" />
                <entry key="codecFilter" value-ref="codecFilter" />
                <!--可以关闭MINA的日志-->
                <!--<entry key="loggingFilter" value-ref="loggingFilter" />-->
            </map>
        </property>
    </bean>


    <bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter" />

    <bean id="mdcInjectionFilter" class="org.apache.mina.filter.logging.MdcInjectionFilter">
        <constructor-arg value="remoteAddress" />
    </bean>

    <bean id="codecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
        <constructor-arg>
            <bean class="com.allhis.filter.MyCodeFactory"></bean>
        </constructor-arg>
    </bean>

    <!--<com.allcom.bean id="loggingFilter" class="org.apache.mina.filter.logging.LoggingFilter" />-->

</beans>